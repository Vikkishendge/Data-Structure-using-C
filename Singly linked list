#include <stdio.h>
#include <stdlib.h>

typedef struct node
{
  int info; 
  struct node *next;
}NODE;/*Create the node structure*/

int search(NODE *head,int key)
 {
  NODE *temp;
  int pos;
  for(temp=head->next,pos=1;temp!=NULL;temp=temp->next,pos++)
   {
    if(temp->info==key)
    return pos;
   }
    return -1;
  }/*End of search function.....*/
    
 int insert(NODE *head,int num,int pos)
 {
   NODE *temp,*newnode;
   int i;
   
   for(temp=head,i=1;(temp!=NULL)&&(i<=pos-1);i++)
   temp=temp->next;
   if(temp=NULL)
   {
     printf("position out of range");
     return;
   }
   newnode= (NODE*)malloc(sizeof(NODE));
   newnode->info=num;
   newnode->next=temp->next;
   temp->next=newnode; 
 }
 int delposition(NODE *head,int pos)
 {
  NODE *temp,*temp1;
  int i;
  for(temp=temp->next,i=1;(temp->next!=NULL)&&(i<=pos-1),i++;temp=temp->next) 
  if(temp->next=NULL)
  {
    printf("Position out of range");
    return;
  }
  temp1=temp->next;
  temp->next=temp1->next;
  free(temp1);
 }
int sort(NODE *head)
{
  NODE *temp,*temp1;
  int num;
  for(temp=head->next;temp!=NULL;temp=temp->next)
  for(temp1=temp->next;temp1!=NULL;temp1=temp1->next)
  if(temp->info>temp1->info)
  {
    num= temp->info;
    temp->info=temp1->info;
    temp1->info= num;
  }
  
}
int delvalue(NODE *head,int num)
{
  NODE *temp,*temp1;
  for(temp=temp->next;temp->next!=NULL;temp=temp->next)
  if(temp->next->info==num)
  {
    temp1= temp->next;
    temp->next=temp1->next;
    free(temp1);
    return;
  }
printf("element not found ");
}

void display(NODE *head)
 {
  NODE *temp;
  printf("START------>");
  for(temp=head->next;temp!=NULL;temp=temp->next)
   {
    printf("%d------>",temp->info);
   }
    printf("NULL");
 }/*End of display function....*/
void create(NODE *head)
 {
  NODE *last, *newnode;
  int i,n;
  last=head;
  
  printf("How many nodes you want create:");
  scanf("%d",&n);
  
  for(i=0;i<n;i++)
   {
    newnode=(NODE*)malloc(sizeof(NODE));
    newnode->next=NULL;
    printf("Enter the number stored:");
    scanf("%d",&newnode->info);
    last->next=newnode;
    last=newnode;
   }
 }/*End of node create function....*/
int main()
 {
  NODE *head;
  int choice, n,pos;
  head=(NODE*)malloc(sizeof(NODE));/* allocate the memory run time using malloc function*/
  do
{
  printf("\n1: create");
  printf("\n2: display");
  printf("\n3: search");
  printf("\n4: insert");
  printf("\n5: sort");
  printf("\n6: delvalue");
  printf("\n7: delposition");
  printf("\nEnter your choice:");
  scanf("%d",&choice);
  
  switch(choice)
  {
  case 1: create(head);
          break;
  case 2: display(head);
          break;
          
  case 3:
     printf("Enter the element to search:");
     scanf("%d",&n);
     pos=search(head,n);
     if(pos==-1)
     printf("Element not found int list");
     else
     printf("Element found at pos %d",pos);
     break;
  case 4: 
    printf("Enter the element and pos:");
    scanf("%d %d",&n,&pos);
    insert(head,n,pos);
    display(head);
    break;
    
  case 5:sort(head);
         display(head);
         break;
         
  case 6: 
    printf("Enter the number to delete:");
    scanf("%d",&n);
    delvalue(head,n);
    display(head);
    break;
    
  case 7:
    printf("Enter the delete by position:");
    scanf("%d",&pos);
    delposition(head,pos);
    display (head);
    break;
  } 
  }while(choice!=7);
}
